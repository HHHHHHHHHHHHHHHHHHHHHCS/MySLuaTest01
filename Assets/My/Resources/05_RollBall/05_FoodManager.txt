require("05_RollBall/05_Food")

local foodManager={}

local spawnCount,radius,rotSpeed=12,4,45

local parent

function foodManager:Init(_gameManager)

    table.insert( _gameManager.updateList, self:Update())

    self.foods={}
    parent=GameObject().transform
    parent.name="FoodParent"
    local angle = 360/spawnCount

    for i=1,spawnCount do

        local newFoodTs = GameObject.Instantiate(_gameManager.prefabsData.foodPrefab,parent).transform
        local pos = newFoodTs.position
        pos.x=radius* math.cos(math.rad(i*angle))
        pos.z=radius* math.sin(math.rad(i*angle))
        newFoodTs.position=pos

        local newFood = food:New(newFoodTs)
        table.insert(self.foods, newFood)
    end
end

function foodManager:Update()
    return function()
        for k,v in pairs(self.foods) do
            v:Rot(rotSpeed)
        end
    end
end

function foodManager:KillFood(food)
    for k,v in pairs(self.foods) do
        if v.transform==food.gameObject.transform then
            table.remove(self.foods,k)
            break
        end
    end

    GameObject.Destroy(food.gameObject) 
end

return foodManager


